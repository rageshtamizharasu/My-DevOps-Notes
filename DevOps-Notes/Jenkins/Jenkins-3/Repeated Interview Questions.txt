VPC
1.	VPC Definition
2.	Why we go for VPC?
3.	What is CIDR block? CIDR masking
4.	What is subnet in general
5.	How to configure Public subnet and Private subnet
6.	Public subnet Vs Private subnet
7.	How did you apply domain name for private instance in VPC
8.	Nacl vs SG 
9.	Flow of application to backend, what are all aws services involved?
10.	What are different security level option in aws?
11.	What are fundamental pillars of aws architecture?
12.	VPC peering vs VPC transit gateway
13.	Default tenacy/dedicated tenacy
14.	What is use of NAT gateway?
15.	Nat gateway vs nat instance
16.	Is security group account specific/region-specific
17.	How will you apply domain name for private instance in VPC?
EC2
1.	What are the types of EC2 and pricing model
OnDemand: Based on instance you use, pay for per hour or per second. You can increase/decrease compute capacity based on demand of application and pay for specified per hourly rates
Dedicated: Physical EC2 server dedicated for use. Reduce costs by allowing existing server bound software license 
Reserved: Used for applications that may require reserved capacity, can commit EC2 for 1/3 year to reduce total costs
Spot: users with urgent computing needs for large amount of additional capacity

2.	In what basis you will choose EC2 instances on pricing. Tell the scenario and difference
3.	What types of instances you used in your project? What is disaster recovery plan for project?
4.	What is meant by SSL certificate and how and why to use it?
5.	Have you experience in to configure SSL certificates? If yes, please explain
6.	How do we retrieve a data if pem file is lost? Can we do without changing the instance id?
7.	What are the types of VPN and how to configure vpn in aws?
8.	AMI vs Snapshot vs Backup
9.	If filesystem/volume is 100%(CPU utilization is full), troubleshoot
10.	How to increase EBS volume?
11.	OS level upgrade, panic issue
12.	Importance of Elastic ip
13.	Elastic ip costs
14.	Role of Elastic Ip in EC2 and NAT
15.	How will you attach/detach EBS volume
16.	What are types of EBS volumes
17.	Difference between EBS vs S3
18.	How will you troubleshoot network down issue 
19.	Amazon certificate manager
20.	OS mount
Route53
1.	Types of record sets in Route53
2.	Types of routing policies and scenario
3.	Purpose of Route53
4.	ELB dns/ ip attach
EBS
1.	How do you do Blue green deployment in aws beanstalk?
2.	How do you attach or detach EBS volumes?
3.	How will attach EBS to running instance?
GIT
1.	GIT branching strategies
2.	How will you decide which code should be moved to production if conflict occurs?
3.	What is Distributed Version Control system
4.	How will you know in GIT if a branch has been already merged into master?
5.	What is head in GIT and how many heads can be created in a repository
6.	Git rebase vs Git merge
7.	Git status vs git diff
8.	How to fix broken commit
9.	How will you solve merge conflict?
10.	Why is it desirable to create an additional commit rather than amending an existing commit?
11.	Feature branching in GIT
12.	How can you restore previous version of your project?
13.	You committed a file and only later noticed that it actually should have been “ignored”.  How can you ignore?
14.	You accidently committed on the master branch instead of feature/login. Describe the process to revert?
15.	How can you undo a commit that has already been pushed to a shared branch on a remote repository?
16.	You have accidently deleted a branch. Is there any ways to  recover it and bring it back?
17.	How to commit in remote repo?
18.	How to create users in GIT-HUB and give access to users?
19.	Git History and git tag -Usage
20.	Git pull vs git fetch vs git clone
21.	What is pull request?
22.	How will you confirm that you have updated code in your local
23.	Git vs svn
24.	Git revert, git undo commit (revert to old commit)
25.	Git stash, git stash apply
26.	Git cherrypick
27.	How to create a repository using console
28.	How to push code without asking password?
29.	Git commit, append
30.	Git ignore
31.	Git branch -d
32.	Git clone vs git remote
33.	Git stash vs git diff
34.	Git reset – hard, soft, mixed
35.	Commit rollback
36.	Webhooks
37.	What is diff between SVN &  GIT?
GIT	SVN
Ditributed model	Centralised model
Every user has own copy of code on their local	Central repository has the working code, changes are committed in central repo
Difficult to learn, more concepts and commands	Very easy compared to git
Limited capacity to handle large binary files	Can handle large binary files in addition to code
Does not require network to perform git operation	Requires network
38.	What is diff between GIT & GIT HUB?
GIT	GIT-HUB
Software	Service
Command line tool	GUI
Installed locally on system	Hosted on web
Maintained by linux	Maintained by Microsoft
Version control to manage source code history	Hosting service for git repositories
No user management feature	Built-in user management
39.	What is the stashing  in GIT?
Stashing is a Git function that allows you to temporarily save your file changes without applying them to your project
40.	What is git rebase?
Rebase is an action in Git that allows you to rewrite commits from one branch onto another branch. Essentially, Git is deleting commits from one branch and adding them onto another.
41.	What is clone in git?
git clone is a Git command line utility which is used to target an existing repository and create a clone, or copy of the target repository
42.	How will create Organizational setup in git?
43.	How will you create users and give access to them in git?
ELB
1.	LB types and usecases
2.	Stateful and stateless applications, Explain why Lambda is stateless
3.	Types of Autoscalling. What type of autoscaling you are doing in your project? (Horizontal/vertical)
4.	How session is maintained in LB?
5.	Difference between 3 load balancers
6.	In which case we will use, NLB, ALB, CLB?
7.	How to automate ami update in autoscaling?
8.	Difference between Launch configuration and Launch Template
Jenkins
1.	CI vs CD. What are other things included in CI other than build?

2.	Difference between Declarative and scripted pipeline
Declarative pipeline	Scripted pipeline
always begin with the word pipeline	always begin with the word node
Declarative pipelines break down stages into individual stages that can contain multiple steps	Scripted pipelines use Groovy code and references to the Jenkins pipeline DSL within the stage elements without the need for steps.
 
 

3.	Structure of declarative and scripted pipeline (refer above)
4.	Flow of CI CD in Jenkins
5.	What is agent node, label?
6.	Syntax of label
7.	How to take backup your Jenkins?
8.	Do you have any script to launch slave nodes?
9.	How do you resolve build failure?
10.	What is difference between DevOps and CICD?
11.	What are the git commands you use?
12.	Difference in Git fetch and Git pull
13.	What is default port of Jenkins?
14.	Explain the stages in your project declarative pipeline.
15.	How to checkout git code in Jenkins
16.	Upstream vs downstream jobs
17.	Plugins
18.	Parameterized job
19.	How will you give access to other user in Jenkins?
20.	Master- slave configuration or How will you create slave in Jenkins?
Mange Jenkins->Manage node->new node name(dumb node)-> enter the details of slave (labels, launchmethod, username, password, host, runservice,availability)
21.	How will you create pipeline in Jenkins?

22.	How will you ensure security in credentials in jenkins?
Maven
1.	Pom.xml
2.	Setting.xml
3.	Lifecycle of maven
Linux
1.	Difference between soft link and hard link
2.	How to find particular word from a file?
CloudFront
1.	Difference between elastic cache vs CloudFront vs Read replica
2.	What is edge Location 
3.	If I delete file from edge location what happens?
4.	TTL value (How much to set)
5.	CloudFront Benefits
Ansible
1.	Ansible roles vs Playbook
2.	What is ansible galaxy
3.	Ansible vault
4.	Loops concept in playbook
5.	How to build and run docker container using ansible playbook.
6.	How to connect from one server to other in ansible?
7.	Write a playbook to ping 100 servers from master server
8.	What is ansible architecture and how to set up password based authentication?
9.	What is your approach to deploy war files in ansible? List down steps
10.	What you mean by roles, tasks and handlers in ansible? Give me an example of ansible playbook
11.	If you want to deploy war file in production, what are your approach (pre-requisites)?
12.	How master will get connect to node?
13.	Roles structure
14.	Handlers
15.	Vault
16.	Template module
17.	For what purpose you will use ansible in your project?
Terraform
1.	EC2, RDS, VPC creation using Terraform
2.	State file delete, How to backup in terraform
3.	Terraform statefile, where will you store?
4.	Created a infra using terraform, collegue changed in console, wanted the same change in statefile? Terraform refresh
5.	What is stop command
6.	What is Terraform provisioner
7.	What is terraform module
8.	Is it possible to lock terraform module?
9.	Terraform datasource
10.	Where will you add statefile
11.	Statefile locking
12.	How will you select availability zones using terraform?
13.	What is terraform provider versioning?
14.	How will you use terraform import command? 
Python
1.	Datatypes
2.	Variables
3.	Functions
4.	Set, tuple, list, dictionaries, libraries
5.	Which library will you use for python in aws?
6.	Write a program to print the  maximum occurred number in the input string
Input ={0,2,1,1,5,63,85,12,1,1,9,3,3}
Output = 1
7.	How will you reverse string in python
8.	What are all the libraries and modules used in project?
S3
1.	Is S3 block level storage or object level storage
2.	CORS – Cross Region Replication Service
3.	What is difference between S3 and other aws storages?
4.	How do you use S3 bucket in your project? (Purpose)
5.	What is maximum size of S3 bucket and object
6.	Storage classes in S3
7.	How will you take bucket copy in aws? (aws s3 sync source dest --recursive)
8.	Glacier
9.	Aws s3 commands
10.	Lifecycle policy
11.	Encryption
12.	Bucket permission
13.	Transfer acceleration
14.	Static website hosting
15.	Is S3 global service?
16.	Versioning
17.	Are you able to store .tf files in S3? If yes explain

IAM
1.	Roles vs policies
2.	How to create user, group, role, policies
3.	How to create customized policies?
4.	What are inline policies?
5.	How to create access to another account?
6.	Is IAM, user-specific/account-specific/region-specific?
7.	How to restrict policy for user?
8.	What are roles?
RDS
1.	What kind of service is RDS?
2.	Can we have SAAS in RDS?
3.	How cluster concept will work in RDS? Role of reader and writer in aurora db
4.	Autoscalling in RDS
5.	What are the advantage and disadvantages of going for RDS instead of installing MySQL in EC2?
6.	Difference between RDS and DynamoDB
7.	In which scenario we can go for DynamoDB?
8.	Option and parameter groups in RDS
9.	Database backup vs snapshot
10.	How to ensure database is highly available?
11.	Aurora benefits
12.	How will you access database
Lambda
1.	Difference between Lambda vs EC2
2.	For what purpose you used lambda in your project
3.	What are the languages supported in lambda
4.	Lambda maximum timeout
5.	What kind of application you use in lambda?
6.	How to trigger?
SNS- SQS
1.	What is synchronous and asynchronous application?
2.	If message is lost or not sent.. Where it will be stored and how long it will be stored
Cloudwatch
1.	Cloudtrial vs Cloudwatch
2.	How to monitor memory utilization in aws?
Docker
1.	ECS vs docker
2.	In docker file we give -p option while running docker. What is the difference?
3.	Docker container vs VM, what is the difference?
4.	Why Should I go for Docker in my project?
5.	Docker architecture
6.	Docker kill, docker pause and docker stop
7.	CMD VS entry point
8.	What is the difference between copy and add in docker file?
9.	Difference between ENV and ARG in docker file
10.	What is the difference between RUN and CMD
11.	Why should I go for Docker Volume?
12.	How to share docker data in multiple containers?
13.	Do you have experience in writing docker file?
14.	Where will you push your docker image?
15.	Docker attach
16.	How will you push docker image in docker hub?
17.	How to add volumes to running container?
18.	Can I limit file size/CPU utilization for docker in my machine?
19.	Docker network difference/advantage – host, bridge, none
20.	Best practices for writing Dockerfile
21.	How to communicate between two containers in different network?
22.	What is docker link and advantages?
23.	Docker link vs depends_on
24.	What is virtualization?
25.	What is microservices?
26.	Difference between -v and mount
27.	How to remove only stopped containers?
28.	What is docker swarm?
29.	Difference between docker swarm and Kubernetes
30.	What is orchestration container?
31.	How to tune your docker file?
32.	Multistage builds in docker
33.	How will you confirm there is no security vulnerabilities in public image?
34.	How to monitor docker container?
35.	How will you handle or store your private image in your env?
36.	How to set resource limit for your container?
37.	Difference between bridge network and custom bridge network.
38.	How to minimize size of docker image?
39.	Multi stage builds in docker
40.	VM vs container
41.	Benefits of going for containerization
42.	How to optimize docker image
43.	How to troubleshoot if docker command (docker ps) is getting hanged and not working?
44.	Does system requires any prerequisites to run docker on top of it?
General
1.	Tell me about yourself
2.	Daily Tasks
3.	What is DevOps? Why DevOps?
4.	Monolithic Vs Microservice architecture
5.	Monitoring tools used?
6.	How do you do code review?
7.	Apache Vs Jboss
8.	How many stop at a time using rolling update?
9.	Tell me about the approval process for making changes in pro env
10.	Suppose a application is running on server, how will you deploy generally?
11.	Onboarding Application – Test functionality before go live
12.	Saml federation
13.	CAMS in devOps
14.	Continuous Delivery vs Continuous Deployment vs continuous Integration
15.	How will you ensure code quality in your organization?
16.	Blue green deployment vs rolling deployment
17.	What is IAAS, PAAS, SAAS in aws
18.	Hypervisor
19.	How will you create environment in aws?
20.	Cloud migration
21.	What is agile methodology?
22.	Explain ITIL process?
23.	How will you troubleshoot if my server is down? Explain the steps