JENKINS 
-------

1. CSP : AWS, AZURE, GCP, ALIBABA, ORACLE, IBM
2. AWS: COST, HIGH AVAILABLE, PAY-AS-YOU-GO, FREE-TIER 750HRS, 2RS - OPEN ACCOUNT.
        200+ ; 6 ENGS, IaaS - SER,STO,NW, PaaS-DB,SEC, SaaS-APP(RUN,OS, MID), DaaS 
        Global Infrastructure - BCP (REGIONS AND AZs)
3. SIVARASAN (NON TECHNICAL) - CLIENT; - MOHAN - CEO (ENGLISH) - CTM - SANTHOSH(
   BUSINESS ANALYST - MADHAN
   SANTHOSH - DEV HEAD (AJAY) - PYTHON  NODE JS - SILAMBARASAN(SOLU ARCH) - AWS 
   - DESIGN(DEV, TEST, PROD, DR) - 
4. DEVOPS - CI and CD PIPELINE
DEV - SURIYA(TEST HEAD) - DEPLOY (APPLICATION) - 
   - MAINTAINCE - KUMUTHA - CUSTOMER SATISFACTION - 
CI - Continuous Integration
CD - Continuous Delivery / Deployment


5. FACEBOOK: DARK LAUNCHING : 1 SINGLE SERVER CT AND CD; DEVOPS - 

6. CI - JENKINS ; JAVA; 5 AWARDS, ORACLE, PLUG-INS (2500+) ; 
   5 - TEST, DEPLOY, REPORT, NOTI, COMPILE

7. 10 plug-ins; 

8. close to 80%; 

9. Project: Nokia Nightly project ; ella codum onna vantha perpadu dan - integration
   Solution: JENKINS 

10. AWS - INFRA 
    DEVOPS - AUTOMATION
    JOBS - CI AND CD PROJECTS


JENKINS SET-UP: JAVA AND THEN JENKINS

Jenkins-1:
----------
1. AWS - Amazon Web Services - "IaaS, PaaS, SaaS" - Pricing Model - Pay-as-you-go
   -> Time & Cost & Man-effort - reduce
   -> High Availbility
   -> Technologies infras: Server,Storage,security,network, database, application
   -> Provides - Infrastructures

2. Devops Project Management Team
   - Development + Testing + Production + Disaster Recovery
   - Automation - CI and CD Pipeline => Continous Integration and Continuous Deployment/Delivery 
   - SDLC - Software Development Lifecycle model - {Waterfall,Agile,Devops}
   - Case Study - Dark Launching - T&D on a single user base(server) - Facebook
   - Stages of Devops -> CD, CVCS, CT, CI, CM, CD etc ...
   - Pipeline - Sequence=> {Coding} - 
       Commit(git)  - Download(Jenkins) - 
     - QA(Sonar Qube) - Compile - Build - UAT - Monitoring - Deployment
   - Plug-ins Pipeline and Groovy Script Pipeline
   
3. Jenkins - Continuous Integration and Continous Deployment 
   Build + Test + Deploy
   Stages - Job {Project}

4. Go-live - dev + Test + CMR - Implementation - LIve+DR
   PM - pROGRAMMER - Loan.java v1.2 - enhancement - dev + test + live + dr - Deployment






Jenkins - 1
-----------
1. What is the goal of IT Industry?
   - Providing the solution to the client
   - Fastest Delivery
   - Client Satisfaction
   - Efficient Cost-Management
   - Time Management
   - Quality and accuracy - 95% - CSI 
   - Utilize the appropriate Resources/Technologies
   - Right Resources


2. How is one client requirment is becoming an Software?
   - Client Requirement - Business Analyst - BRD 
   - Requirement Gathering - IT COMPANY 
   - Planning - SM
   - Design
   - Test
   - Go-live
   - Implementation / Deployment 
   - Application 
   - End Users
   - Profit: Adv, Internet, 

Task: TRP Rating / How the revenue is generating (Domain wise analysis)?


3. How CR to S/W?
   AWS    -  Amazon Web Services - 200+ - 6-Engs
   DEVOPS -  CI and CD - Continuous Integration and Continuous Delivery 
          -  Stages of Devops - 
          -  CD, CSCM, CT, CM, CI, CD
          -  Case Study - Dark Launching 
   SDLC   -  WaterFall - low  / Agile - 50% / Devops - 100%

4. Continous Integration: 
   
 

Reviews:
--------
1. IT Co goal? - Fastest/accuracy/Quality
2. Goal of AWS? - Infras
3. Goal of Devops? - Automation + Eliminates Errors from Project
                     CI and CD Pipeline, Automation,                 
                     Dark Launching - Single user base Test and Deploy.
                     Stages - CD, CSCM, CT, CM, CI, CD
4. JENKINS - Continuous Integration => "Build + Test + Deploy"

5. Challenge in Traditional Integration? - Dev Depend, s/w slowness,
   debugging, infrequent release, Test report delay

6. Continuous Integration - Quick test report, quick s/w   

7. Case Study - Nokia Nightly Build - 
   Day time deves - Sataging Area - Nightly Build 
   Solution - Jenkins 

8. mr.360* -Jenkins 
   Plug-ins = add-ons 
   2016 - 70%, 80%

9. Devops? Methodology

10. SDLC - WATERFALL - Low / AGILE - 50%(CI) / DEVOPS - 100%

11. SOftware accuracy and quality percentage? 95%

12. CSI - ITIL PROCESS - "STEP-WISE IMPROVEMENT"


TASK: BUSINESS MODEL / TRP RATING / TRADE MARKETING
    










                      



The Master of Devops and Continuous Integration Tool: JENKINS 
-------------------------------------------------------------

1. Traditional Integration Method and challenges
2. Benefit to use the Continuous Integration in Project management
3. Jenkins and It's Highlights
4. Case Study: Nokia Nightly Build
5. Amazon Auto-Triggering time for the source code from Version control system
6. Job Creation - Job Ordering - Periodically Triggering - Remotely Triggering
7. Jenkins - Master and Slaves concept



Jenkins Pre-Requisite: Java installation:
=========================================

sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt install openjdk-8-jdk -y
java -version

Jenkins Installation:
=====================


wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -

sudo sh -c 'echo deb https://pkg.jenkins.io/debian binary/ > /etc/apt/sources.list.d/jenkins.list'

sudo apt-get update

sudo apt-get install jenkins -y

5) Verify:-
(i) ps -ef | grep jenkins
(ii) Jenkins will be launched as a daemon up on start - Check under /etc/init.d/jenkins
(iii) /etc/default/jenkins will capture configuration parameters for the launch like e.g JENKINS_HOME.

6) launch the Jenkins URLS in the browser:-
<ubuntu_ip_address>:8080

7) Get the Password from the path : /var/lib/jenkins/secrets/initialAdminPassword

---------------------------------------------------------------------------------
/etc/default# cat /var/lib/jenkins/secrets/initialAdminPassword
6aba06880c534f85afba6be0085d2fd9
root@ip-172-31-28-251:/etc/default#
---------------------------------------------------------------------------------

8) Click "Install Suggested Plugins" - Then the installation gets started.

9) Create a new user of your own by giving Name, Email-id, username, password.

10) Then Login into the console and explore Jenkins.



Jenkins Reviews:
---------------

1. Challenges persisted in Traditional Integration method 

2. What was the mechanism followed to eliminate Nokia Nightly build process?

3. Language used to developed Jenkins?

4. What is meant by plug-ins? How many plug-ins there jenkins? What is the use for 
   Project management?

5. will it require to install Java as a pre-requisites before we install jenkins?
   if yes, Why?

6. What is the default Port number for Jenkins? Is this amendable? 
   from which file system can find port number configuration?

7. Is Jenkins an Daemon process? If yes, Specifcy the file system path?
   also mention that what type of informations it may contains?

8. Is there any command use to verify Jenkins running status?

9. What is the command use to reboot Jenkins?

10. Will it possible to restart Jenkins in GUI?

11. What is the difference between Status and weather for particular job?

12. Is "Remotely Triggering Job" method for the job runs an prefered process?

13. What is the neccessary to have a Master and Slave method to be implemented in the 
    real-time project?

14. What is the default Job landing path?

15. mention the slaves customized job landing path?

16. What is the role of Master? 

17. What is the role of Slave?

18. Will it able to verify the logs of slave jobs from Master's console itself?

19. Will Slave machine require to be install the Jenkins tool? Justify.

20. What is meant by Agent? How to enable the Agent connectivity between Master and Slaves?

21. What is the Plug-ins type we are using to enhance master and slaves to our project?

22. lable name?

23. how frequently jenkins fetches the chnages from Version control system?















