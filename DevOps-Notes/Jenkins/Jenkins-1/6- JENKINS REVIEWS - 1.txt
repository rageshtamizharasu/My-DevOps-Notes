Interview Questions:
====================
1. Port No: 8080
2. Default Path: /etc/default
3. Daemon  path: /etc/init.d
4. CLI - VERSIONS : cat /var/lib/jenkins/config.xml   <version>2.303.3</version> Jenkins 2.303.3
5. public ip:8080
6. cat /var/lib/jenkins/secrets/initialAdminPassword
7. http://13.40.57.53:8080/
8. Project
   -> Default Job Landing path: /var/lib/jenkins/workspace/BuildProject
   -> Job Ordering
   -> Periodically Triggering
   -> Remotely Triggering : 
      http://13.40.57.53:8080/job/BuildProject/build?token=1234
9. Pipeline through Plug-ins
   -> Delivery Pipeline  - Manager - Report
   -> Build Pipeline     - Executors - Entire features need to enable
   -> Build Monitor View - BUild / Test / Deploy 
   -> parameterized      - Input

How to install one plug-in and enhance with existing project management?
Manage jenkins - manage Plugins - 

10. Groovy Script - Pipeline process

AWS and DEVOPS:
---------------
1. AWS - Infra

2. DEVOPS - End to End project automation
   CI & CD Pipeline 
   STAGES - Source code management, Integration, Deployment, Monitoring 
 
3. JENKINS - Continuous Integration tool
             Integration + Build + Test + Deploy 

http://3.6.92.78:8080/
Job landing path for jenkins - /var/lib/jenkins/workspace/samplejob

http://3.6.92.78:8080/job/BuildProject/build?token=1234


=> build pipeline view
   delivery pipeline view
   build monitor pipeline view
   Parameterized Job

=> user management 
   What is the security Policy?
   Role-based Authourization strategy


4 Plug-ins:
---------
   build pipeline view
   delivery pipeline view
   build monitor pipeline view
   Role-based Authourization strategy



Jenkins - 2
-----------
Master and slave concept
Auto-Deployment
Groovy script 





Jenkins Reviews:
---------------
AWS - Infra
DEvops - automation
devops stages - CI and CD pipeline


1. Challenges persisted in Traditional Integration method 
CI and CD - No Automation
Slowness, Resource idle, No frequent release, debugging - challenge


2. What was the mechanism followed to eliminate Nokia Nightly build process?
Continuous Integration - Jenkins


3. Language used to developed Jenkins?
Java


4. What is meant by plug-ins? How many plug-ins there jenkins? What is the use for 
   Project management?
add-ons - addtional features
2500
Integration + Enable any features

5. will it require to install Java as a pre-requisites before we install jenkins?
   if yes, Why?
Yes
it is developed with Java

6. What is the default Port number for Jenkins? Is this amendable? 
   from which file system can find port number configuration?

8080
yes
/etc/default - jenkins


7. Is Jenkins an Daemon process? If yes, Specifcy the file system path?
   also mention that what type of informations it may contains?
Yes
/etc/init.d


8. Is there any command use to verify Jenkins running status?
ps -ef | grep jenkins


9. What is the command use to reboot Jenkins?
service httpd restart
service jenkins restart


10. Will it possible to restart Jenkins in GUI?
http://10.20.02.45:8080/restart


11. What is the difference between Status and weather for particular job?
success or failure - status
weather - stablity

12. Is "Remotely Triggering Job" method for the job runs an prefered process?
No - 

13. What is the neccessary to have a Master and Slave method to be implemented in the 
    real-time project?
master - act as a dc - controller for slaves


14. What is the default Job landing path?
/var/lib/jenkins/workspace


15. mention the slaves customized job landing path?
/home/ubuntu/jenkins


16. What is the role of Jenkins: is an open-source, Continuous Intergration Tool.

Jenkins: written in Java.

Jenkins Pre-Requisite:
=========================
1.Java	:	JDK 11 or 8
2.Enable the port 8080 
=========================

1. Port No: 8080
2. Default Path: /etc/default
3. Daemon  path: /etc/init.d
4. CLI - VERSIONS : cat /var/lib/jenkins/config.xml   <version>2.303.3</version> Jenkins 2.303.3
5. public ip:8080
6. cat /var/lib/jenkins/secrets/initialAdminPassword
7. http://13.40.57.53:8080/
8. Project
   -> Default Job Landing path: /var/lib/jenkins/workspace/BuildProject
   -> Job Ordering
   -> Periodically Triggering
   -> Remotely Triggering : 
      http://13.40.57.53:8080/job/BuildProject/build?token=1234
9. Pipeline through Plug-ins
   -> Delivery Pipeline  - Manager - Report
   -> Build Pipeline     - Executors - Entire features need to enable
   -> Build Monitor View - BUild / Test / Deploy 
   -> parameterized      - Input
   
10. Groovy Script - Pipeline process
11.The slaves customized job landing path /home/ubuntu/jenkins

============================
Plug-ins:
---------
   build pipeline view
   delivery pipeline view
   build monitor pipeline view
   Role-based Authourization strategy



? 
controller

17. What is the role of Slave?
Node


18. Will it able to verify the logs of slave jobs from Master's console itself?
Yes ---


19. Will Slave machine require to be install the Jenkins tool? Justify.
No...


20. What is meant by Agent? How to enable the Agent connectivity between Master and Slaves?
ubuntu - ssh localhost



21. What is the Plug-ins type we are using to enhance master and slaves to our project?
manage Node  and cloud - Feature enablement


22. label name?  - calling 

23. how frequently jenkins fetches the chnages from Version control system in amazon?
8 secs




1. AWS - Amazon Web Services
provides INfra
2. Devops - CI and CD Pipeline - end to end Automation 
3. SDLC - Waterfall, Agile, Devops
4. Stages of Devops
   - Continuous Development
   - Continuous Source Code management
   - Continuous Integration {Build + Test + Deploy }
   - Continuous Delivery {Change management - Release management}
   - Continuous Monitoring

5. Continuous Integration {Build + Test + Deploy }
   Jenkins - Plug-ins 

6. Devops Case Study : Dark launch - Facebook - 2011 - Single user base test and deliver

7. Jenkins Case Study - Nokia Nightly Build - CI


8. Jenkins 
   -> Java
   -> Jenkins
   -> Admin COnsole Load

Task: HVM, PV = Hardware Virtualization and para virtualization - 
Task: What is the user name used to login into ubuntu/linux server?
      default user (ec2-user) (ubuntu)
Task: JRE - Should be there in our ubuntu machine then only we can install jenkins
Delete on Termination - Always keep in Enabled status
Source : 0.0.0.0/0  - Anyone can access our ubuntu server from anywhere - ssh - 22
Dynamic Public Ip: 18.169.127.58 - default Public ip always an dynamic public ip
Default package for ubuntu : apt
Default package for linux : yum


What is the default port number: 8080
What is the default jenkins path: /etc/default
File system path for jenkins daemon process: /etc/init.d
Where we can get the jenkins initial password: /var/lib/jenkins/secrets/initialAdminPassword

Jenkins url: http://18.169.127.58:8080/

Exception:
cat: /var/lib/jenkins/secrets/initialAdminPassword: No such file or directory

Task: From where we can retrieve the new passoword what we set


10. Projects
{Webhook}

Client requirement
Choose framework
Architecture
Coding  - Non-Executable source code
Remote repository
jenkins 
 Groovey Script   
   Pipeline 
    step1 - Code_management_project
    - VCS - GITHUB, GITLAB, JIRA, BITBUCKET 
    step2 (QA-Project)
    - QA (Quality Assurance) - Sonar Qube
    Step 3: Build-project
    - Build - maven, ant, gradle
    Step4: Testproject
    - Test - Selenium
    Step 5: deploy_project
    - Deploy - Ansible, Docker, puppet, chef, Salt-stack 
    Step 6: Monitoring_project
    - Monitoring - NAgios, Splunk, AppDB
 

Default Job landing path for jenkins: /var/lib/jenkins/workspace/BuildProject


crontab - Auto-triggering enablement


http://18.169.127.58:8080/job/BuildProject/build?token=1234




1. AWS - Amazon Web Services 
End Goal: Server, storage, Security, nw, db, app - 200 services
=> DEVELOPMENT + TESTING + PRODUCTION + DISASTER RECOVERY 

2. DEVOPS  - end to end automation 
DEV - DEVE ENV - CODING - UINT TEST 
GITHUB
TEST - CONTINUOUS INTEGRATION TOOL - JENKINS 

end to end automation 

3. SDLC

4. Case Study : Dark Launching


5. Stages of Devops
Continuous development
Continuous Source code management
Continuous INtegrations - build + test + deploy  == 
Continuous Montitoring 
Continous Delivery
Continuous Deployment 



6. Traditional methodology:

7. Continous Integration

8. Nokia Nightly Build

9. Jenkins:
--> Installation - Java / jenkins
--> Admin Console Load
--> Projects run

yum list available 
apt list available 

Default port number for jenkins : 8080
Default file path: /etc/default
Is jenkins is an daemon process: Yes
/etc/init.d

where we can get initial password of the jenkins
/var/lib/jenkins/secrets/initialAdminPassword


http://18.135.96.156:8080/



10. Projects / jobs
Murugan Stores


Infra - coding - RR - JENKINS
      Configuration management,  
        (QA, Build, Test, 
        Deploy {Dev, Test, Pre-Prod, Prod, DR}, Monitor

Jenkins - Integration - plug-ins 
Groovy script - QA , BUILD , 




Default job landing path for jenkins: /var/lib/jenkins/workspace/BuildProject

http://18.135.96.156:8080/job/BuildProject/build?token=1234



Periodically triggering
Remotely triggering




Jenkins - Continuous Integration Tool
-------------------------------------
1. aws - infrastructure - server creation - jenkins installation

2. Devops - CI and CD Pipeline process - Automation
   Stage - Commit, build, test, deploy, monitor           
           Continuous dev, Continuous Source Code management
           Continuous Build
           Continuous Test
           Continuous deploy
           Continuous monitoring
           Continuous Integration
    SDLC - Waterfall -0%, Agile-50% and Devops - 100%
    Use case for devops: Dark launching technique, Facebook application, single user base T & D

3. Continuous integration: 8 secs Jenkins to Gitrepository = Build+Test+Deploy
   CI = CC + CT
   CD = Frequent hosting 
   Case Study: Nokia Nightly Build - jenkins tool... 
   Plug-ins: add-ons; Ansible - Ansible plug-in install + Integration + Automation
   Amazon Application - every 8 secs once jenkins -> GIT - Changes fetch and deploy


4. Ubuntu server + Java + jenkins Installation
   => Jenkins Admin Console
   => projects - Job run


Interview Questions:
1. Default Port Number for jenkins - 8080
2. Default jenkins file path : cd /etc/default - jenkins (port no etc)
3. Daemon process - Kernel, End user no direct interaction, reboot - dead(sleep)
   Normal Process - O/S, END user direct interaction, reboot - it keep runs
   Jenkins Default Daemon process path: /etc/init.d
4. Initial Admin Password path for unlock the jenkins 
   /var/lib/jenkins/secrets/initialAdminPassword
5. Jenkins - http://18.134.228.149:8080/
6. cat: /var/lib/jenkins/secrets/initialAdminPassword: No such file or directory
   admin and admin123
7. Task=> identify where it is getting stored new password set on admin console
8. Project - Job
   manual run - Job ordering 
   Automate - Periodically Triggering
            - Remotely Triggering 
            http://18.134.228.149:8080/job/BuildProject/build?token=1234
9. Job landing path: /var/lib/jenkins/workspace 













































1. Default Portno: 8080
2. Default file path: /etc/default
3. Default daemon file path: /etc/init.d
4. Normal Process : O/S, End user interaction yes, reboot - active
   Daemon Process : O/S - Kernel, End user interaction NO, reboot - Dead
5. InitialAdminPassword FS path: /var/lib/jenkins/secrets/initialAdminPassword
   cat /var/lib/jenkins/secrets/initialAdminPassword
6. Jenkins Url: http://13.40.4.242:8080/

Interview Question: 
Task 1: cat: /var/lib/jenkins/secrets/initialAdminPassword: No such file or directory

7. Objective: CI and CD - Automation -> Build + Test + Deploy 
8. Default Job Landing path: /var/lib/jenkins/workspace/BuildProject
9. Job ordering, periodically triggering - crontab..cronjob, Remotely-triggering
   http://13.40.4.242:8080/job/BuildProject/build?token=1234
10. plug-ins: add-ons - enables new features and integrate devops tools for the PMP
    Plug-in installation and using for the project managment:
    Pipeline can be created using two ways:   
     1. Plug-ins pipeline
     2. Groovy Script
     
Plug-ins Pipeline:
     1. Delivery Pipeline -  manager
     2. Build Pipeline    -  Executors
     3. Build Monitor View - Particular Job Monitoring
     4. Parameterized Job  - project run - Input

Plug-ins Installation - Manage Jenkins - Manage plugins

--> Portable for Simple-Project
--> Inserting new job inside the running pipeline is very tough (manual interventions)
--> Sequential order - Jobs



11. User Management: What is the Security Policy can be applied into jenkins?
aws - root-user => admin 200+
    - IAM-user  => Restricted access . depends

Technology - Developer/Tester/Deployer/Monitor/Supporter   

Logged-in users can do anything  => admin 

Plug-in: Role-based Authorization
https://plugins.jenkins.io/


Demo: developer - user1 ; tester - user2


12. Groovy Script - Pipeline process - CI and CD Project
Stages: 
Continuous Configuration management
Continuous Development
Continuous Source Code Management
Continuous Quality Assurance
Continuous Build
Continuous Testing
Continuous Monitoring
Continuous Integration
Continuous Deployment/Delivery   


Scripted Pipeline - Can write the groovey script inside the console directly

project Version1 Stages: Ansible/Git/maven/Sonar Qube/selenium/Kubernetis/splunk

New requirement for the existing pipeline: 



Auto-deployment using Tomcat
Master and Slave







